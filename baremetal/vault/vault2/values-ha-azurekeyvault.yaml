# Vault Helm Chart Value Overrides
global:
  enabled: true
  tlsDisable: false

injector:
  enabled: true
  # Use the Vault K8s Image https://github.com/hashicorp/vault-k8s/
  image:
    repository: "hashicorp/vault-k8s"
    tag: "latest"

  resources:
      requests:
        memory: 100Mi
        cpu: 250m
      limits:
        memory: 256Mi
        cpu: 250m

server:
  image:
    repository: "hashicorp/vault"
    tag: "latest"

  # These Resource Limits are in line with node requirements in the Vault Reference Architecture for a Small Cluster
  resources:
    requests:
      memory: 100Mi
      cpu: 250m
    limits:
      memory: 2Gi
      cpu: 2000m

  # For HA configuration and because we need to manually init the vault,
  # we need to define custom readiness/liveness Probe settings
  readinessProbe:
    enabled: true
    path: "/v1/sys/health?standbyok=true&sealedcode=204&uninitcode=204"
  livenessProbe:
    enabled: true
    path: "/v1/sys/health?standbyok=true"
    initialDelaySeconds: 60

# extraVolumes is a list of extra volumes to mount. These will be exposed
  # to Vault in the path `/vault/userconfig/<name>/`.
  extraVolumes:
    - type: secret
      name: vault-cert
    - type: secret
      name: vault-ca-cert
  
  # Pass kubernetes secret with Vault CA certificate as environment variable. Secert was mounted as volume above
  extraEnvironmentVars:
    VAULT_CACERT: /vault/userconfig/vault-ca-cert/tls.crt

  # Set environment variables needed for Auto unsealing using Azure Key Vault. 
  extraSecretEnvironmentVars:
    - envName: AZURE_TENANT_ID
      secretName: azure-key-vault
      secretKey: AZURE_TENANT_ID
    - envName: AZURE_CLIENT_ID
      secretName: azure-key-vault
      secretKey: AZURE_CLIENT_ID
    - envName: AZURE_CLIENT_SECRET
      secretName: azure-key-vault
      secretKey: AZURE_CLIENT_SECRET
    - envName: VAULT_AZUREKEYVAULT_VAULT_NAME
      secretName: azure-key-vault
      secretKey: VAULT_AZUREKEYVAULT_VAULT_NAME
    - envName: VAULT_AZUREKEYVAULT_KEY_NAME
      secretName: azure-key-vault
      secretKey: VAULT_AZUREKEYVAULT_KEY_NAME
  
  auditStorage:
    enabled: false

  standalone:
    enabled: false

  dataStorage:
    enabled: true
    size: 500Mi

  # Run Vault in "HA" mode.
  ha:
    enabled: true
    replicas: 3
    raft:
      enabled: true
      setNodeId: true

      config: |
        ui = true
        listener "tcp" {
          address = "[::]:8200"
          cluster_address = "[::]:8201"
          tls_cert_file = "/vault/userconfig/vault-cert/tls.crt"
          tls_key_file = "/vault/userconfig/vault-cert/tls.key"
          tls_ca_cert_file = "/vault/userconfig/vault-ca-cert/tls.crt"
        }

        storage "raft" {
          path = "/vault/data"
            retry_join {
            leader_api_addr = "https://vault2-0.vault2-internal:8200"
            leader_ca_cert_file = "/vault/userconfig/vault-ca-cert/tls.crt"
            leader_client_cert_file = "/vault/userconfig/vault-cert/tls.crt"
            leader_client_key_file = "/vault/userconfig/vault-cert/tls.key"
          }
          retry_join {
            leader_api_addr = "https://vault2-1.vault2-internal:8200"
            leader_ca_cert_file = "/vault/userconfig/vault-ca-cert/tls.crt"
            leader_client_cert_file = "/vault/userconfig/vault-cert/tls.crt"
            leader_client_key_file = "/vault/userconfig/vault-cert/tls.key"
          }
          retry_join {
            leader_api_addr = "https://vault2-2.vault2-internal:8200"
            leader_ca_cert_file = "/vault/userconfig/vault-ca-cert/tls.crt"
            leader_client_cert_file = "/vault/userconfig/vault-cert/tls.crt"
            leader_client_key_file = "/vault/userconfig/vault-cert/tls.key"
          }

          autopilot {
            cleanup_dead_servers = "true"
            last_contact_threshold = "200ms"
            last_contact_failure_threshold = "10m"
            max_trailing_logs = 250000
            min_quorum = 3
            server_stabilization_time = "10s"
          }

        }

        seal "azurekeyvault" {  
        
        }

        service_registration "kubernetes" {}        
# Vault UI
ui:
  enabled: true
  serviceType: "ClusterIP"
  serviceNodePort: null
  externalPort: 8200
